name: Build and Deploy Backend to EKS

on:
  push:
    branches:
      - main  # Roda quando algo for alterado na branch main

jobs:
  build-and-push:
    name: Build and Push Backend Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY_BE }}

      - name: Generate image tag
        id: set_image_tag
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          echo "$IMAGE_TAG" > image-tag.txt
          echo "Generated IMAGE_TAG: $IMAGE_TAG"

      - name: Upload IMAGE_TAG as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-tag
          path: image-tag.txt

      - name: Build Backend Docker Image
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          docker build -t ${{ secrets.ECR_REGISTRY_BE }}:$IMAGE_TAG ./backend-application

      - name: Push Backend Docker Image to ECR
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          docker push ${{ secrets.ECR_REGISTRY_BE }}:$IMAGE_TAG

  deploy:
    name: Deploy Backend to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download IMAGE_TAG Artifact
        uses: actions/download-artifact@v3
        with:
          name: image-tag

      - name: Load IMAGE_TAG
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Retrieved IMAGE_TAG: $IMAGE_TAG"

      - name: Ensure IMAGE_TAG is set
        run: |
          if [ -z "$IMAGE_TAG" ]; then
            echo "Erro: IMAGE_TAG est√° vazia. Abortando..."
            exit 1
          fi
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Backend to EKS using Helm
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          echo "Deploying IMAGE_TAG: $IMAGE_TAG"

          helm upgrade --install backend ./helm-charts/nginx-chart \
            --namespace default \
            --set image.repository=${{ secrets.ECR_REGISTRY_BE }} \
            --set image.tag=$IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
